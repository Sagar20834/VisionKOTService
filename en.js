var express=require("express"),path=require("path"),favicon=require("serve-favicon"),logger=require("morgan"),cookieParser=require("cookie-parser"),bodyParser=require("body-parser"),fs=require("fs"),request=require("request"),Connection=require("tedious").Connection,edge=require("edge"),sql=require("mssql"),Request=require("tedious").Request,config=require("./config");config.Server=config.db.server+"\\"+config.db.options.instanceName;config.common.UnitID=1;config.common.FiscalYearID=1;
var fs=require("fs"),file="KDSData.db",exists=fs.existsSync(file),sqlite3=require("sqlite3").verbose(),db=new sqlite3.Database(file);exists||(db.run("CREATE TABLE StoreMessage (id TEXT,user TEXT,message TEXT);"),console.log("Creating Database "));var print=require("edge").func({assemblyFile:"MobilePrinting.dll",typeName:"MobilePrinting.PrintNew",methodName:"PrintOrder"}),printers=require("edge").func({assemblyFile:"MobilePrinting.dll",typeName:"MobilePrinting.PrinterList",methodName:"Printers"});
console.log("mobileprinting "+print);console.log("mobileprinting"+printers);var cp=new sql.Connection(config.db);
cp.connect().then(function(){var a=new sql.Request(cp);a.input("UserID",sql.Int,config.common.UserID);a.query("DECLARE  @OutletSegmentID tinyint, @CounterSegmentID tinyint     ,@DefaultCashBook int,@DefaultGodown int    SELECT @OutletSegmentID =OutletSegmentID ,  @CounterSegmentID = CounterSegmentID     ,@DefaultCashBook =SYSTEMC.CBID        ,@DefaultGodown =SYSTEMC.SDefaultGodownID     FROM GM.TBL_SystemControl SYSTEMC         SELECT      Outlet.ID AS OutletID    ,CM.ID as CounterID    ,ISNULL(CM.CashBookID ,@DefaultCashBook) AS CashBookID    ,ISNULL(CM.GodownID ,@DefaultGodown) AS GodownID    ,CounterMaster.BillDocNumbID    ,CounterMaster.OrderDocNumbID        FROM GM.Tbl_ClassMaster CM    LEFT OUTER JOIN      (    SELECT ID ,Code,Name FROM GM.Tbl_ClassMaster WHERE ClassTypeID = 1    ) AS Outlet ON CLSID1 = Outlet.ID    LEFT OUTER JOIN GM.Tbl_CounterMaster CounterMaster ON CounterMaster.ClassID =CM.ID    WHERE CM.ID = (SELECT DefaultCounterID FROM  GM.Tbl_UserMaster UM WHERE  UM.ID = @UserID)").then(function(a){console.log(a);a=
a[0];config.common.OutletID=a.OutletID;config.common.CounterID=a.CounterID;config.common.DefaultCashBookId=a.CashBookID;config.common.GodownId=a.GodownID;config.common.OrderNumberingId=a.OrderDocNumbID;config.common.BillNumberingId=a.BillDocNumbID})["catch"](function(a){console.log(a)})})["catch"](function(a){console.log(a)});var connection=new Connection(config.db),connection1=new Connection(config.db);connection.on("connect",function(a){a&&console.log(a)});
connection1.on("connect",function(a){a&&console.log(a)});var routes=require("./routes/index"),users=require("./routes/users"),chat=require("./routes/chat"),app=express();app.io=require("socket.io")();io=app.io;app.set("views",path.join(__dirname,"views"));app.set("view engine","ejs");app.use(logger("dev"));app.use(bodyParser.json({limit:"50mb"}));app.use(bodyParser.urlencoded({limit:"50mb",extended:!0}));app.use(cookieParser());app.use(express["static"](path.join(__dirname,"public")));
app.use("/",routes);app.use("/users",users);app.use("/chat",chat);"development"===app.get("env")&&app.use(function(a,b,c,d){c.status(a.status||500);c.render("error",{message:a.message,error:a})});app.use(function(a,b,c,d){c.status(a.status||500);c.render("error",{message:a.message,error:{}})});var waiters={},KDSUsers={};
app.io.on("connection",function(a){console.log("a user connected");console.log(a.id);a.emit("signUp","");console.log(Object.keys(waiters));a.on("login",function(b){console.log(b);b=JSON.parse(b);waiterName=b.waiterName;delete waiters[waiterName];a.broadcast.emit("logout",waiterName);a.nickName=waiterName;waiters[waiterName]=a;console.log(waiterName+" joined the chat");console.log(Object.keys(waiters))});a.on("KDSLogin",function(b){b=JSON.parse(b);var c=b.KDSUser;a.nickName=c;KDSUsers[c]=a;console.log("KDS Login : "+
b.KDSUser);db.each("select message from StoreMessage where user =?",b.KDSUser,function(a,b){app.io.emit("KDSOrderMessage",b);console.log("Data emitted to KDS waiting : ");console.log(b)})});a.on("KDSDataManage",function(a){a=JSON.parse(a);var b=a.KDSType,d=a.OrderID;console.log(a);"undefined"!=typeof KDSUsers[b]?(KDSUsers[b].emit(a),console.log("Data emitted to KDS asap : "+a)):db.run("INSERT INTO StoreMessage VALUES (?,?,?)",d,b,JSON.stringify(a))});a.on("logout",function(a){app.io.emit("logout",
a)});a.on("chat message",function(a){console.log(a);app.io.emit("chat message",a)});a.on("chatMessage",function(a){console.log(a);app.io.emit("chatMessage",a)});a.on("KDSMessage",function(a){console.log(a);app.io.emit("KDSMessage",a)});a.on("tableStatus",function(a){console.log(a);app.io.emit("tableStatus",a)});a.on("browser chat",function(a){console.log(a);app.io.emit("browser chat",a)});a.on("privateChat",function(a){a=JSON.parse(a);waiterName=a.to;console.log(a);"undefined"!=typeof waiters[waiterName]?
(waiters[waiterName].emit("privateChat",a),app.io.emit("privateChat",a)):(console.log(typeof waiters.property),console.log("error sending message"))});a.on("disconnect",function(b){console.log("a user disconnected");waiterName=a.nickName;a.id==waiters[waiterName].id&&delete waiters[waiterName];a.id==KDSUsers[waiterName].id&&delete KDSUsers[waiterName];console.log(Object.keys(waiters));console.log(waiterName+" left the chat")})});app.get("/api/v1/userlist",function(a,b){b.send(Object.keys(waiters))});
app.get("/table",function(a,b){b.redirect("/api/v1/gettable")});app.get("/product",function(a,b){b.redirect("/api/v1/getproduct")});app.get("/api/v1/orderInformationSetting",function(a,b){(new sql.Request(cp)).query("select ID,StatusID from gm.tbl_orderInformationSetting").then(function(a){b.json(a)})["catch"](function(a){b.status(500).send(a.message)})});
app.get("/api/v1/tabledesign",function(a,b){(new sql.Request(cp)).query("SELECT 0 AS ID, 'Default' AS [Code],'Default' AS [Description],'' AS [Design],0 as [GroupID] UNION ALL SELECT    ID,[Code],[Description],[Design],[GroupID]  FROM  GM.tbl_tablelayout WHERE ISNULL(INACTIVE,0)=0").then(function(a){b.send(a)})["catch"](function(a){console.log(a);status="error";b.status(500).send(a.message)})});
app.put("/api/v1/tabledesign",function(a,b){var c=a.body.description,d=a.body.design,e=a.body.code,k=a.body.groupID,h=new sql.Request(cp);h.input("design",sql.Xml,d);h.input("description",sql.NChar,c);h.input("code",sql.NChar,e);h.input("groupID",sql.Int,k);h.query("if exists(select * from gm.tbl_tablelayout where GroupID=@groupID)  update [GM].[tbl_tablelayout] set code=@code,Description=@description,design=@design,groupID=@groupID where groupID=@groupID  else    insert into [GM].[tbl_tablelayout] values(@code,@description,@design,0,@groupID)").then(function(a){console.log("design set");
b.sendStatus(200)})["catch"](function(a){console.log(a);status="error";b.status(500).send(a.message)})});
app.post("/api/v1/submitFullPayment",function(a,b){var c=a.body.CustomerID,d=a.body.Remarks,e=a.body.AdultPax,k=a.body.ChildPax,h=a.body.PaymentCardID,m=a.body.CardDiscountRate,l=a.body.CardDiscountAmount,q=a.body.ManualDiscount,u=a.body.ActualReceipt,r=a.body.ID,n=new sql.Request(cp);n.input("ID",sql.Int,r);n.input("CustomerID",sql.Int,c);n.input("Remarks",sql.Char,d);n.input("NoPax_Adult",sql.Int,e);n.input("NoPax_Child",sql.Int,k);n.input("PaymentCardID",sql.Int,h);n.input("CardDiscountRate",sql.Decimal,
m);n.input("CardDiscountAmount",sql.Decimal,l);n.input("ManualDiscount",sql.Decimal,q);n.input("ActualReceipt",sql.Decimal,u);n.query("SET XACT_ABORT ON     BEGIN TRANSACTION DECLARE     @SalesTypeID INT SELECT @SalesTypeID =     CASE TypeID WHEN 15 THEN 96 WHEN 16 THEN 96     ELSE 97 END FROM GM.Tbl_Ledger     WHERE ID= @CustomerID UPDATE [SALES].[Tbl_SBM]     SET CustomerID =@CustomerID ,    StatusID=2 ,    SalesTypeID=@SalesTypeID,    Remarks=@Remarks WHERE ID = @ID EXEC [SALES].[Usp_AT_SB] @ID     IF EXISTS (SELECT 0 FROM [SALES].[Tbl_FNBBillAdditional] WHERE SBMID = @ID)     BEGIN UPDATE [SALES].[Tbl_FNBBillAdditional] SET NoPax_Adult = @NoPax_Adult,     NoPax_Child = @NoPax_Child, PaymentCardID = @PaymentCardID, CardDiscountRate = @CardDiscountRate,     CardDiscountAmount = @CardDiscountAmount, ManualDiscount = @ManualDiscount, ActualReceipt = @ActualReceipt     WHERE SBMID = @ID    END ELSE BEGIN INSERT INTO [SALES].[Tbl_FNBBillAdditional] ( SBMID, NoPax_Adult,     NoPax_Child, BillCardID, PaymentCardID, CardDiscountRate, CardDiscountAmount, ManualDiscount, ActualReceipt )     SELECT @ID, @NoPax_Adult,@NoPax_Child,NULL , @PaymentCardID,@CardDiscountRate,     @CardDiscountAmount, @ManualDiscount, @ActualReceipt     END COMMIT     SET XACT_ABORT OFF").then(function(a){b.send(a)})["catch"](function(a){console.log(a);
b.sendStatus(500)})});
app.post("/api/v1/submitPartialPayment",function(a,b){var c=a.body.CustomerID,d=a.body.ReceiptAmount,e=a.body.CashBankId,k=a.body.Remarks,h=a.body.AdultPax,m=a.body.ChildPax,l=a.body.PaymentCardID,q=a.body.CardDiscountRate,u=a.body.CardDiscountAmount,r=a.body.ManualDiscount,n=a.body.ActualReceipt,x=a.body.ID;0==e&&(e=null);0==l&&(l=null);var p=new sql.Request(cp);p.input("CustomerID",sql.Int,c);p.input("ReceiptAmount",sql.Decimal,d);p.input("CashBankId",sql.Int,e);p.input("Remarks",sql.Char,k);p.input("NoPax_Adult",
sql.Int,h);p.input("NoPax_Child",sql.Int,m);p.input("PaymentCardID",sql.Int,l);p.input("CardDiscountRate",sql.Decimal,q);p.input("CardDiscountAmount",sql.Decimal,u);p.input("ManualDiscount",sql.Decimal,r);p.input("ActualReceipt",sql.Decimal,n);p.input("ID",sql.Decimal,x);p.query("SET XACT_ABORT ON BEGIN TRANSACTION DECLARE @SalesTypeID INT SELECT @SalesTypeID =   CASE TypeID WHEN 15 THEN 96 WHEN 16 THEN 96   ELSE 97 END FROM GM.Tbl_Ledger   WHERE ID= @CustomerID UPDATE [SALES].[Tbl_SBM]   SET CustomerID =@CustomerID , AdvanceAmt=@ReceiptAmount, AdvanceCBID= @CashBankId ,   StatusID=2 , SalesTypeID=@SalesTypeID, Remarks=@Remarks   WHERE ID = @ID EXEC [SALES].[Usp_AT_SB] @ID   IF EXISTS (SELECT 0 FROM [SALES].[Tbl_FNBBillAdditional] WHERE SBMID = @ID)   BEGIN UPDATE [SALES].[Tbl_FNBBillAdditional]   SET NoPax_Adult = @NoPax_Adult,  NoPax_Child = @NoPax_Child,  PaymentCardID = @PaymentCardID,  CardDiscountRate = @CardDiscountRate,   CardDiscountAmount = @CardDiscountAmount,  ManualDiscount = @ManualDiscount,  ActualReceipt = @ActualReceipt   WHERE SBMID = @ID    END ELSE    BEGIN INSERT INTO [SALES].[Tbl_FNBBillAdditional] ( SBMID,   NoPax_Adult,  NoPax_Child,  BillCardID,  PaymentCardID,  CardDiscountRate,   CardDiscountAmount,  ManualDiscount,  ActualReceipt )   SELECT @ID, @NoPax_Adult,@NoPax_Child,NULL ,   @PaymentCardID, @CardDiscountRate,  @CardDiscountAmount,  @ManualDiscount,   @ActualReceipt   END COMMIT   SET XACT_ABORT OFF").then(function(a){b.send(a)})["catch"](function(a){console.log(a);
b.sendStatus(500)})});app.get("/api/v1/billreceipt",function(a,b){(new sql.Request(cp)).query("select m.ID,m.VNo as BillNo,t.Name as TableName,m.BasicAmt,m.NetAmt  as BillAmt     from sales.Tbl_SBM m left outer join gm.Tbl_ClassMaster t on m.CLSID3 = t.ID     where m.StatusID is null and m.CancelByID is null").then(function(a){b.send(a)})["catch"](function(a){console.log(a);b.sendStatus(500)})});
app.get("/api/v1/companyDetails",function(a,b){(new sql.Request(cp)).query("select Name,Code,SDate,EDate, sd.M_Miti as [sMiti], ed.M_Miti as [eMiti]     from gm.Tbl_FiscalYearMaster m left outer join usys.Tbl_DateMiti sd on m.SDate = sd.M_Date    left outer join usys.Tbl_DateMiti ed on m.EDate = ed.M_Date").then(function(a){b.send(a)})["catch"](function(a){console.log(a);status="error";b.status(500).send(a.message)})});
app.get("/api/v1/productImage/:id",function(a,b){var c=a.params.id,d=new sql.Request(cp);d.input("productID",sql.Int,c);d.query("select Logo from gm.tbl_product where id=@productID;").then(function(a){console.log(a);b.writeHead(200,{"Content-Type":"image/jpeg"});b.end(a[0].Logo)})["catch"](function(a){console.log(a);status="error";b.status(500).send(a.message)})});
app.get("/api/v1/tableDesignList",function(a,b){(new sql.Request(cp)).query("select [ID],[Code],[Description],[GroupID] from     [GM].[tbl_tablelayout] where inactive=0").then(function(a){b.send(a)})["catch"](function(a){console.log(a);status="error";b.status(500).send(a.message)})});
app.get("/check",function(a,b){function c(){request("http://localhost:3000/table",function(a,c,m){a||200!=c.statusCode?console.log(a):(console.log(m.length+" tables"),10<m.length&&(e="connected"));b.render("check",{productStatus:d,tableStatus:e})})}var d="not connected",e="not connected";(function(){request.get("http://localhost:3000/product",function(a,b,e){a||200!=b.statusCode?console.log(a):(console.log(e.length+" products"),10<e.length&&(d="connected"));c()})})()});
app.get("/setting",function(a,b){b.render("setting",{server:config.db.server,database:config.db.database,username:config.db.userName,password:config.db.password,instance:config.db.options.instanceName,userID:config.common.UserID})});
app.post("/setting",function(a,b){var c=a.body.server,d=a.body.database,e=a.body.username,k=a.body.password,h=a.body.instance,m=a.body.userID;fs.readFile("config.js","utf8",function(a,b){if(a)return console.log(a);var l=b.replace(/config.db.server='[^;]*'/,"config.db.server='"+c+"'"),l=l.replace(/config.db.database='[^;]*'/,"config.db.database='"+d+"'"),l=l.replace(/config.db.userName='[^;]*'/,"config.db.userName='"+e+"'"),l=l.replace(/config.db.password='[^;]*'/,"config.db.password='"+k+"'"),l=l.replace(/instanceName:'[^;]*'/,
"instanceName:'"+h+"'"),l=l.replace(/config.common.UserID=[^;]*/,"config.common.UserID="+m+"");fs.writeFile("config.js",l,"utf8",function(a){if(a)return console.log(a);console.log("Config file changed");console.log("Exit called");console.log("Will respawn if run using forever");process.exit(0)})});b.render("configchanged")});
app.post("/api/v1/privatechat",function(a,b){var c=a.body.to,c=String[c];"undefined"!=typeof waiters.property?waiters[c].emit("privateChat",a.body.message):(console.log(typeof waiters.property),console.log("error sending message"));b.send("privatechat send");console.log(a.body)});app.post("/api/v1/chattest",function(a,b){tableID=a.body.TableID;status=a.body.Status;app.io.emit("tableStatus",{DineIn:tableID});b.send("test");console.log("status changed"+tableID)});
app.post("/api/v1/chatmessage",function(a,b){message=a.body.message;app.io.emit("chatMessage",message);b.send("Send");console.log("chat message "+message)});app.post("/api/v1/tableKDS",function(a,b){var c={};c.TableNo=a.body.TableNo;c.WaiterID=a.body.WaiterID;c.GroupName=a.body.GroupName;c.ProductName=a.body.ProductName;c.Status=a.body.Status;c.OrderNo=a.body.OrderNo;app.io.emit("KDSMessage",c);b.send("kds messsage send");console.log("message send "+c);console.log(a.body)});
app.post("/api/v1/test",function(a,b){console.log("bill order called");var c=a.body.TableID,d=a.body.WaiterID,e=a.body.PCInfo,k=a.body.Remarks,h=a.body.NoOfGuest,m=a.body.NoOfGuestChild,l=a.body.DetailsXml,q=a.body.BillingName,u=a.body.BillingAddress,r=a.body.BillingEmail,n=a.body.BillingPhone,x=a.body.BillingType,p=a.body.VATPANNo,w=a.body.Printer,v=a.body.Token;console.log(l);"undefined"==w&&(w="");var t=0;request=new Request("[SALES].[Usp_FNBO_Tab_UI]",function(a,b){a?console.log(a):console.log(b+
" rows")});var g=require("tedious").TYPES;request.addParameter("OutletID",g.Int,config.common.OutletID);request.addParameter("TableID",g.Int,c);request.addParameter("AddClass1ID",g.Int);request.addParameter("AddClass2ID",g.Int);request.addParameter("AddClass3ID",g.Int);request.addParameter("AddClass4ID",g.Int);request.addParameter("AddClass5ID",g.Int);request.addParameter("FYID",g.TinyInt,config.common.FiscalYearID);request.addParameter("UnitID",g.SmallInt,config.common.UnitID);request.addParameter("DID",
g.Int);request.addParameter("NumId",g.SmallInt,config.common.OrderNumberingId);request.addParameter("CounterID",g.Int,config.common.CounterID);request.addParameter("WaiterID",g.Int,d);request.addParameter("UserId",g.SmallInt,config.common.UserID);request.addParameter("BillingName",g.NVarChar,q);request.addParameter("BillingAddress",g.NVarChar,u);request.addParameter("BillingEmail",g.NVarChar,r);request.addParameter("Billingphone",g.NVarChar,n);request.addParameter("BillingType",g.SmallInt,x);request.addParameter("VATPANNo",
g.NVarChar,p);request.addParameter("Remarks",g.Text,k);request.addParameter("NoOfGuestAdult",g.Int,h);request.addParameter("NoOfGuestChild",g.Int,m);request.addParameter("PCInfo",g.Text,e);request.addParameter("Token",g.Text,v);request.addParameter("DetailsXml",g.Text,l);request.addOutputParameter("OutMessage",g.NVarChar);request.addOutputParameter("OutId",g.Int);request.on("returnValue",function(a,e,d){console.log(a+" = "+e);"OutId"==a&&(t=e,b.send("Order taken"),app.io.emit("tableStatus",{DineIn:c}),
print({UserID:config.common.UserID,UnitID:config.common.UnitID,type:253,VoucherNumber:t,ServerName:config.Server,ServerUserName:config.db.userName,ServerPassword:config.db.password,DataBaseName:config.db.database,PrinterName:w,NoOfCopy:1},function(a,b){a?console.log(a):(console.log("printer:"+w),console.log(b))}))});connection.callProcedure(request)});
app.post("/api/v1/billorder",function(a,b){var c=new Date,d=a.body.TableID,e=a.body.WaiterID,k=a.body.PCInfo,h=a.body.BillingName,m=a.body.BillingAddress,l=a.body.BillingEmail,q=a.body.BillingPhone,u=a.body.VATPANNo,r=a.body.BillCardID;0==r&&(r=null);var n=a.body.CustomerID,x=a.body.BasicAmt,p=a.body.TAmt,w=a.body.NetAmt,k=a.body.PCInfo,v=a.body.details,t=a.body.sbt,g=a.body.Remarks,z=a.body.Printer,y=a.body.NoOfCopy,y=Number(y);"undefined"==z&&(z="");"undefined"==y&&(y=0);var A=0,f=require("tedious").TYPES;
console.log(c);request=new Request("[SALES].[Usp_FNBB_TAB_UI]",function(a,b){a?console.log(a):console.log(b+" rows")});v=JSON.parse(v);t=JSON.parse(t);v={columns:[{name:"ID",type:f.Int},{name:"SODID",type:f.Int},{name:"Sno",type:f.SmallInt},{name:"PID",type:f.Int},{name:"Qty",type:f.Decimal,precision:19,scale:7},{name:"UOMID",type:f.Decimal,precision:19,scale:7},{name:"Rate",type:f.Decimal,precision:19,scale:7},{name:"Amt",type:f.Decimal,precision:19,scale:7},{name:"TermAmt",type:f.Decimal,precision:19,
scale:7},{name:"NetAmt",type:f.Decimal,precision:19,scale:7},{name:"Description",type:f.NVarChar}],rows:v};t={columns:[{name:"ROWID",type:f.Int},{name:"PSno",type:f.SmallInt},{name:"ID",type:f.Int},{name:"PID",type:f.Int},{name:"BTID",type:f.SmallInt},{name:"TypeID",type:f.SmallInt},{name:"TRate",type:f.Decimal,precision:19,scale:7},{name:"TAmt",type:f.Decimal,precision:19,scale:7}],rows:t};request.addParameter("ID",f.Int,0);request.addParameter("VDate",f.Date,c);request.addParameter("CustomerID",
f.Int,n);request.addParameter("OutletID",f.Int,config.common.OutletID);request.addParameter("CounterID",f.Int,config.common.CounterID);request.addParameter("TableID",f.Int,d);request.addParameter("WaiterID",f.Int,e);request.addParameter("AddClass1ID",f.Int,null);request.addParameter("AddClass2ID",f.Int,null);request.addParameter("AddClass3ID",f.Int,null);request.addParameter("AddClass4ID",f.Int,null);request.addParameter("AddClass5ID",f.Int,null);request.addParameter("DefaultGodownID",f.Int,config.common.GodownId);
request.addParameter("AdvanceAmt",f.Decimal,0);request.addParameter("AdvanceCBID",f.Int,null);request.addParameter("BasicAmt",f.Decimal,x);request.addParameter("TAmt",f.Decimal,p);request.addParameter("NetAmt",f.Decimal,w);request.addParameter("RVno",f.NVarChar,null);request.addParameter("noOfPaxAdult",f.Decimal,0);request.addParameter("noOfPaxChild",f.Decimal,0);request.addParameter("BillCardID",f.Int,r);request.addParameter("Remarks",f.NVarChar,g);request.addParameter("BillingName",f.NVarChar,h);
request.addParameter("BillingAddress",f.NVarChar,m);request.addParameter("BillingEmail",f.NVarChar,l);request.addParameter("Billingphone",f.NVarChar,q);request.addParameter("VATPANNo",f.NVarChar,u);request.addParameter("PriceListID",f.SmallInt,null);request.addParameter("TenderAmt",f.Decimal,0);request.addParameter("ReturnAmt",f.Decimal,0);request.addParameter("FYID",f.TinyInt,config.common.FiscalYearID);request.addParameter("UnitID",f.TinyInt,config.common.UnitID);request.addParameter("DID",f.Int,
null);request.addParameter("NumId",f.Int,config.common.BillNumberingId);request.addParameter("PCInfo",f.Text,k);request.addParameter("UserId",f.Int,config.common.UserID);request.addParameter("Details",f.TVP,v);request.addParameter("SBT",f.TVP,t);request.addOutputParameter("OutId",f.Int);request.addOutputParameter("OutMessage",f.NVarChar);request.on("row",function(a){a.forEach(function(a){console.log(a.value)})});request.on("returnValue",function(a,c,e){console.log(a+" = "+c);"OutId"==a&&(0==c?b.send("213"):
(A=c,b.send("Bill Order taken"),print({UserID:config.common.UserID,UnitID:config.common.UnitID,type:257,VoucherNumber:A,ServerName:config.Server,ServerUserName:config.db.userName,ServerPassword:config.db.password,DataBaseName:config.db.database,PrinterName:z,NoOfCopy:y},function(a,b){a?console.log(a):(console.log("printer:"+z+" NoOfCopy:"+y),console.log(b))})))});connection.callProcedure(request)});function isEmpty(a){return!Object.keys(a).length}
app.get("/api/v1/login",function(a,b){var c=a.headers.username,d=a.headers.password,e=new sql.Request(cp);e.input("Username",sql.NChar,c);e.input("Password",sql.NChar,d);e.query("if exists(    SELECT     U.ID    FROM   GM.Tbl_ClassMaster  AS U    WHERE U.Name = @UserName AND CONVERT(VARCHAR(MAX),U.[Password]) = ISNULL(NULLIF(@Password,''),'000')  AND InActive = 0    )    SELECT     U.ID,    U.Name,    UR.IsBillCancel,    UR.IsBilling,    UR.IsOrderCancel,    UR.IsOrderTransfer,    UR.IsRePrintBill,    UR.IsRePrintOrder,    UR.IsRePrintOrderCancel,    UR.IsBillSettlement,    UR.IsRePrintOrderTransfer    FROM (select * from  GM.Tbl_ClassMaster WHERE Name = @UserName AND CONVERT(VARCHAR(MAX),[Password]) = ISNULL(NULLIF(@Password,''),'000')  AND InActive = 0 ) AS U    LEFT OUTER JOIN GM.Tbl_WaiterRole UR on U.ID=UR.WaiterID    else select  Convert(smallint,0 ) ID").then(function(a){console.log("login api called");
console.log(a);b.send(a)})["catch"](function(a){console.log(a);status="error";b.sendStatus(500)})});app.get("/api/v1/nocControl",function(a,b){(new sql.Request(cp)).query("select ISNULL(IsAdult,1) IsAdult,ISNULL(IsChild,0) IsChild,ISNULL(NoOfAdult,2) NoOfAdult,    ISNULL(NoOfChild,0) NoOfChild,ISNULL(NULLIF(CaptionAdult,''),'NoOfAdult') CaptionAdult,ISNULL(NULLIF(CaptionChild,''),'NoOfChild') CaptionChild     from GM.TBL_SystemControl").then(function(a){b.status(200).json(a)})["catch"](function(a){b.status(500).json({message:a.message})})});
app.post("/api/v1/passcodelogin",function(a,b){var c=a.body.passcode;console.log("passcode");console.log(c);var d=new sql.Request(cp);d.input("passcode",sql.NVarChar(1024),c);d.query("IF EXISTS( Select ID from GM.Tbl_ClassMaster where ClassTypeID=4 and PassCode = convert(Varbinary(max),@passcode ) and InActive=0)   SELECT    U.ID,   U.Name,   UR.IsBillCancel,   UR.IsBilling,   UR.IsOrderCancel,   UR.IsOrderTransfer,   UR.IsRePrintBill,   UR.IsRePrintOrder,   UR.IsRePrintOrderCancel,   UR.IsBillSettlement,   UR.IsRePrintOrderTransfer   FROM (select * from  GM.Tbl_ClassMaster WHERE PassCode = convert(Varbinary(max),@passcode ) and InActive=0 ) AS U   LEFT OUTER JOIN GM.Tbl_WaiterRole UR on U.ID=UR.WaiterID   Else    Select 0 ID").then(function(a){b.status(200).json(a[0]);
console.log(a[0])})["catch"](function(a){b.status(500).json(a.message)})});
app.post("/api/v1/cashierPasscodeLogin",function(a,b){var c=a.body.passcode;console.log("cashierPasscode");console.log(c);var d=new sql.Request(cp);d.input("passcode",sql.NVarChar(1024),c);d.query("IF EXISTS( Select ID from GM.Tbl_UserMaster where PassCode = convert(Varbinary(max),@passcode) and InActive=0)   SELECT    U.ID,   U.Name    FROM (select * from  GM.Tbl_UserMaster WHERE PassCode = convert(Varbinary(max),@passcode) and InActive=0 ) AS U   Else    Select 0 ID").then(function(a){b.status(200).json(a[0]);console.log(a[0])})["catch"](function(a){b.status(500).json(a.message);
console.log(a)})});
app.post("/api/v1/history",function(a,b){var c=a.body.mobile;console.log(c);var d=new sql.Request(cp);d.input("mobileNo",sql.Char,c);d.query("with cte as(select d.pid,count(d.pid) as [count]  from sales.tbl_sbd as d  where sbmid in (select sbmid from sales.tbl_sbba where BillingPhoneValue=@mobileNo)  group by pid) select TOP 15 pid,Name,SalesPrice,UOMID,count from cte   LEFT OUTER JOIN gm.tbl_product p on cte.pid =p.id order by [count] desc").then(function(a){b.send(a)})["catch"](function(a){console.log(a);status=
"error";b.sendStatus(500)})});app.post("/api/v1/latestSOMID",function(a,b){var c=a.body.tableID,d=new sql.Request(cp);d.input("tableID",sql.Char,c);d.query("SELECT TOP 1   SOMID   FROM  [SALES].[Ufn_SO_Outstanding](0,0) Outstanding   LEFT OUTER JOIN SALES.Tbl_SOM SOM ON Outstanding.SOMID = SOM.ID   WHERE Outstanding.QTY > 0  and  SOM.CLSID3 =@tableID   order by SOMID ").then(function(a){b.send(a)})["catch"](function(a){console.log(a);status="error";b.sendStatus(500)})});
app.get("/api/v1/billingTerms",function(a,b){(new sql.Request(cp)).query("SELECT     BT.ID    ,BT.Code     ,BT.Name    ,BT.SBCategoryID AS CategoryID    ,BT.SBInActive    ,Category = (SELECT ENUM.CValue FROM Usys.Tbl_ENUM_COLL AS ENUM WHERE ENUM.ID =  BT.SBCategoryID)    ,BT.[SBBasisID] AS BasisID    ,Basis = (SELECT ENUM.CValue FROM Usys.Tbl_ENUM_COLL AS ENUM WHERE ENUM.ID =  BT.[SBBasisID])    ,CASE BT.SBCategoryID  WHEN 46 THEN '+/-' ELSE BT.[SBSign] END AS [Sign]    ,CASE BT.SBCategoryID  WHEN 46 THEN 0 ELSE COALESCE(BT.SBRate,0)  END AS [Rate]    ,CASE BT.SBCategoryID  WHEN 46 THEN 0 ELSE COALESCE(BT.SBAmount,0) END AS [Amount]    ,CASE BT.SBCategoryID  WHEN 46 THEN 63 ELSE BT.[SBRoundOffID] END AS [RoundOffID]    ,RoundOff = (SELECT ENUM.CValue FROM Usys.Tbl_ENUM_COLL AS ENUM WHERE ENUM.ID =  CASE BT.SBCategoryID  WHEN 46 THEN 63 ELSE BT.[SBRoundOffID] END)    ,ISNULL(BT.[SBFormualation],'') AS [Formulation]    ,BT.[SBCalcBasisID] AS [CalcBasisID]    ,CalcBasis= (SELECT ENUM.CValue FROM Usys.Tbl_ENUM_COLL AS ENUM WHERE ENUM.ID =  BT.[SBCalcBasisID])    ,BT.SBIsDisableID AS IsDisableID    ,BT.SBTypeID  AS IsTypeID    ,CONVERT(smallint,117) AS TypeID    FROM GM.Tbl_BillingTerm AS BT    WHERE BT.ModuleID In (49,51,109,111)    AND  BT.SBCategoryID  In (43,45,46)    AND  BT.SBTypeID = 105 ---BillWise    AND  BT.SBInActive = 0     ORDER BY CASE WHEN BT.SBCategoryID = 46 THEN 99999 ELSE  CODE  END ").then(function(a){b.send(a)})["catch"](function(a){b.sendStatus(500)})});
app.get("/api/v1/makingTime",function(a,b){(new sql.Request(cp)).query("select TOP 1 NormalFromTime,NormalToTime,PickFromTime,PickToTime,OffFromTime,OffToTime from gm.tbl_systemcontrol").then(function(a){b.send(a)})["catch"](function(a){console.log(a);status="error";b.sendStatus(500)})});
app.get("/api/v1/getOrderPersonDetails",function(a,b){var c=a.headers.table,d=new sql.Request(cp);d.input("tableID",sql.Char,c);d.query("select * from sales.tbl_soba where somid  in(   SELECT distinct SOMID      FROM  [SALES].[Ufn_SO_Outstanding](0,0) Outstanding      LEFT OUTER JOIN SALES.Tbl_SOM SOM ON Outstanding.SOMID = SOM.ID   WHERE Outstanding.QTY > 0  and  SOM.CLSID3 =@tableID   )order by id desc").then(function(a){b.send(a)})["catch"](function(a){console.log(a);status="error";b.sendStatus(500)})});
app.post("/api/v1/getOrderPersonDetails1",function(a,b){var c=a.body.tableID,d=new sql.Request(cp);d.input("tableID",sql.Char,c);d.query("select * from sales.tbl_soba where somid = (  SELECT TOP 1  SOMID  FROM  [SALES].[Ufn_SO_Outstanding](0,0) Outstanding  LEFT OUTER JOIN SALES.Tbl_SOM SOM ON Outstanding.SOMID = SOM.ID  WHERE Outstanding.QTY > 0  and  SOM.CLSID3 =@tableID  order by SOMID ) order by id desc").then(function(a){b.send(a)})["catch"](function(a){console.log(a);status="error";b.sendStatus(500)})});
app.get("/api/v1/searchmobile",function(a,b){var c=a.headers.mobileno,d=new sql.Request(cp);d.input("mobileNo",sql.Char,c);d.query("select TOP 1 BillingName,BillingPhoneValue,BillingAddressValue,BillingEmailValue,BillingVatPanNo     from sales.tbl_sbba     where BillingPhoneValue=@mobileNo order by id desc").then(function(a){b.status(200).json(a)})["catch"](function(a){b.status(500).json({message:a.message})})});
app.post("/api/v1/setOrderPersonDetails",function(a,b){var c=a.body.ID,d=a.body.BillingName,e=a.body.BillingAddress,k=a.body.BillingEmail,h=a.body.BillingPhone,m=new sql.Request(cp);m.input("ID",sql.Char,c);m.input("BillingName",sql.Char,d);m.input("BillingAddress",sql.Char,e);m.input("BillingEmail",sql.Char,k);m.input("BillingPhone",sql.Char,h);m.execute("Sales.tbl_orderPersonDetails").then(function(a){b.sendStatus(200)})["catch"](function(a){console.log(a);status="error";b.sendStatus(500)})});
app.get("/api/v1/userlogin",function(a,b){var c=a.headers.username,d=a.headers.password,e=new sql.Request(cp);e.input("Username",sql.Char,c);e.input("Password",sql.Char,d);e.query("if exists(    SELECT     U.ID    FROM   GM.Tbl_UserMaster  AS U    WHERE U.Name = @UserName AND CONVERT(NVARCHAR(MAX),U.[Password]) = ISNULL(NULLIF(@Password,''),'000')  AND InActive = 0     )    SELECT     U.ID    FROM   GM.Tbl_UserMaster  AS U    WHERE U.Name = @UserName AND CONVERT(NVARCHAR(MAX),U.[Password]) = ISNULL(NULLIF(@Password,''),'000')  AND InActive = 0     else select  Convert(smallint,0 ) ID").then(function(a){console.log("login api called");
console.log(a);b.send(a)})["catch"](function(a){console.log(a);status="error";b.sendStatus(500)})});app.get("/api/v1/printerList",function(a,b){printers({},function(a,d){if(a)throw b.sendStatus(500),err;b.send(d)})});
app.post("/api/v1/print",function(a,b){var c=a.body.VoucherNumber,d=a.body.type,e=a.body.Printer,k=a.body.NoOfCopy;"undefined"==e&&(e="");"undefined"==k&&(k=0);console.log(a.body);c=Number(c);k=Number(k);1==d?d=257:2==d&&(d=253);console.log(typeof c+" "+typeof d);console.log(c+" "+d);print({UserID:config.common.UserID,UnitID:config.common.UnitID,type:d,VoucherNumber:c,ServerName:config.Server,ServerUserName:config.db.userName,ServerPassword:config.db.password,DataBaseName:config.db.database,PrinterName:e,
NoOfCopy:k},function(a,b){a?console.log(a):console.log(b)});debugger;b.sendStatus(200);console.log("aysnc")});
app.get("/api/v1/gettable",function(a,b){(new sql.Request(cp)).query("              ; WITH  CTE AS (    SELECT  DISTINCT     SOM.CLSID3 AS TableID        FROM  [SALES].[Ufn_SO_Outstanding](0,0) Outstanding       LEFT OUTER JOIN SALES.Tbl_SOM SOM ON Outstanding.SOMID = SOM.ID    WHERE Outstanding.QTY > 0     )    ,BILLED AS (    SELECT DISTINCT SBM.CLSID3 AS TABLEID        FROM SALES.TBL_SBM SBM WHERE ISNULL(STATUSID,0) <>2 AND CANCELBYID IS NULL                  )          SELECT         CM.ID AS TABLEID    ,CM.NAME    , CASE when cte.TableID is not null then 'DineIn' WHEN BILLED.TABLEID IS NOT NULL then 'Billed'  else 'Vacant' end as [Status]    ,CG.NAME AS [TableGroup]    ,CM.GroupID AS [TableGroupID]    FROM GM.TBL_CLASSMASTER CM      LEFT OUTER JOIN CTE ON   CM.ID = CTE.TABLEID    LEFT OUTER JOIN BILLED ON CM.ID = BILLED.TABLEID    LEFT OUTER JOIN GM.TBL_CLASSGROUP CG ON CM.GroupID= CG.ID    WHERE CM.INACTIVE =  0 and cm.classtypeid=3    AND cm.id not in(SELECT ISNULL( HomeDeliveryTableID,0) FROM GM.TBL_SystemControl)    ORDER BY CM.Schedule").then(function(a){console.log("table api called");b.send(a)})["catch"](function(a){console.log(a);
status="error";b.sendStatus(500)})});
app.get("/api/v1/getproduct",function(a,b){var c=new sql.Request(cp);c.input("CounterID",sql.Int,config.common.CounterID);c.query(";with Cte as (    SELECT     0 as MenuID    ,'Default' AS MenuName    ,P.ID    ,P.Name    ,P.Descriptions    ,Convert(decimal(19,2),ISNULL(P.SalesPrice,0.0000)) SalesPrice    ,ISNULL(UOM.ID,0) AS UOMID    ,ISNULL(UOM.Code,'') AS UOM        ,ISNULL(PG.id,0) AS [GroupId]    ,ISNULL(PG.Name,'None') AS [GroupName]        ,ISNULL(PAG.id,0) AS [AdditionalGroupId]    ,ISNULL(PAG.Name,'None') AS [AdditionalGroupName]        ,ISNULL(c.Name,'None') AS [Category]        ,P.NormalHour    ,P.PickHour    ,P.OffHour        FROM GM.Tbl_Product P    LEFT OUTER JOIN GM.TBL_PRODUCTGROUP PG ON P.GROUPID=PG.ID    LEFT OUTER JOIN GM.Tbl_ProductAdditionalGroup PAG ON P.AddGroupID = PAG.ID    LEFT OUTER JOIN GM.Tbl_UOM UOM ON P.UOMID =UOM.ID    LEFT OUTER JOIN  [GM].[Tbl_ProductCategoryMaster] c on p.categoryId1 =c.id    WHERE P.InActive = 0     AND P.GroupID IN (SELECT [ProductGroupID] FROM  [GM].[Tbl_CounterProductGroupMapping] C WHERE C.CounterID = @CounterID)         UNION ALL         SELECT     M.ID AS MenuID    ,isnull(nullif(M.PName,''),M.Code) AS MenuName    ,D.PID  as ID    ,P.Name    ,P.Descriptions    ,Convert(decimal(19,2),ISNULL(P.SalesPrice,0.0000)) SalesPrice    ,ISNULL(UOM.ID,0) AS UOMID    ,ISNULL(UOM.Code,'') AS UOM        ,ISNULL(PG.id,0) AS [GroupId]    ,ISNULL(PG.Name,'None') AS [GroupName]        ,ISNULL(PAG.id,0) AS [AdditionalGroupId]    ,ISNULL(PAG.Name,'None') AS [AdditionalGroupName]        ,ISNULL(c.Name,'None') AS [Category]        ,P.NormalHour    ,P.PickHour    ,P.OffHour        FROM GM.Tbl_RecipeMenuMaster M     LEFT OUTER JOIN GM.Tbl_RecipeMenuDetails  D ON M.ID = D.MID    LEFT OUTER JOIN GM.Tbl_Product P ON D.PID=P.ID    LEFT OUTER JOIN GM.TBL_PRODUCTGROUP PG ON P.GROUPID=PG.ID    LEFT OUTER JOIN GM.Tbl_ProductAdditionalGroup PAG ON P.AddGroupID = PAG.ID    LEFT OUTER JOIN GM.Tbl_UOM UOM ON P.UOMID =UOM.ID    LEFT OUTER JOIN  [GM].[Tbl_ProductCategoryMaster] c on p.categoryId1 =c.id    WHERE P.InActive = 0     AND P.GroupID IN (SELECT [ProductGroupID] FROM  [GM].[Tbl_CounterProductGroupMapping] C WHERE C.CounterID = @CounterID) ) select * from cte order by Menuid, name").then(function(a){console.log("database api called");b.send(a)})["catch"](function(a){console.log(a);
b.sendStatus(500)})});
app.get("/api/v1/outstanding",function(a,b){var c=a.headers.tableid,d=new sql.Request(cp);d.input("TableID",sql.Int,c);d.query("Declare @smt nvarchar(max)=''     Declare @TableSegment int         SELECT @TableSegment = ClassTypeID FROM GM.Tbl_ClassMaster WHERE ID = @TableID     ;With Data AS (    SELECT TOP 100 PERCENT    SOM.VNo AS OrderNo    ,SOD.Sno As OrderSno    ,P.Name AS Product    ,Outstanding.Qty     ,SOD.NetAmt As NetAmount    FROM [SALES].[Tbl_SOD] SOD      LEFT OUTER JOIN [SALES].[Tbl_SOM] SOM ON SOM.ID= SOD.SOMID      LEFT OUTER JOIN [SALES].[Ufn_SO_Outstanding](0,0) Outstanding ON SOD.ID=Outstanding.ID    LEFT OUTER JOIN [GM].[Tbl_Product] P ON SOD.PID = P.ID    WHERE  CASE @TableSegment     WHEN 1 THEN SOM.CLSID1     WHEN 2 THEN SOM.CLSID2     WHEN 3 THEN SOM.CLSID3     WHEN 4 THEN SOM.CLSID4     WHEN 5 THEN SOM.CLSID5     WHEN 6 THEN SOM.CLSID6    WHEN 7 THEN SOM.CLSID7    WHEN 8 THEN SOM.CLSID8    WHEN 9 THEN SOM.CLSID9    END = @TableID AND Outstanding.Qty > 0    ORDER BY SOM.VNo,SOD.Sno    ) SELECT * FROM Data").then(function(a){console.log("outstanding api called");b.send(a)})["catch"](function(a){console.log(a);
status="error";b.sendStatus(500)})});
app.get("/api/v1/getMenu",function(a,b){(new sql.Request(cp)).query(" ;with Cte as (        SELECT         0 as MenuID        ,'Default' AS MenuName        ,P.ID        ,P.Name        ,P.Descriptions        ,Convert(decimal(19,2),ISNULL(P.SalesPrice,0.0000)) SalesPrice        ,ISNULL(UOM.ID,0) AS UOMID        ,ISNULL(UOM.Code,'') AS UOM                ,ISNULL(PG.id,0) AS [GroupId]        ,ISNULL(PG.Name,'None') AS [GroupName]                ,ISNULL(PAG.id,0) AS [AdditionalGroupId]        ,ISNULL(PAG.Name,'None') AS [AdditionalGroupName]                ,case when Row_Number() over (order by  P.Name) %3 =0 then 'Veg'         when Row_Number() over (order by  P.Name) %4 =0 then 'NonVeg'         else 'Other' End as Category          ,20 as MakingTime                        FROM GM.Tbl_Product P        LEFT OUTER JOIN GM.TBL_PRODUCTGROUP PG ON P.GROUPID=PG.ID        LEFT OUTER JOIN GM.Tbl_ProductAdditionalGroup PAG ON P.AddGroupID = PAG.ID        LEFT OUTER JOIN GM.Tbl_UOM UOM ON P.UOMID =UOM.ID        WHERE P.InActive = 0         AND P.GroupID IN (SELECT [ProductGroupID] FROM  [GM].[Tbl_CounterProductGroupMapping] C WHERE C.CounterID = 262)         union all        SELECT         1 as MenuID        ,'Today Special' AS MenuName        ,P.ID        ,P.Name        ,P.Descriptions        ,Convert(decimal(19,2),ISNULL(P.SalesPrice,0.0000)) SalesPrice        ,ISNULL(UOM.ID,0) AS UOMID        ,ISNULL(UOM.Code,'') AS UOM                ,ISNULL(PG.id,0) AS [GroupId]        ,ISNULL(PG.Name,'None') AS [GroupName]                ,ISNULL(PAG.id,0) AS [AdditionalGroupId]        ,ISNULL(PAG.Name,'None') AS [AdditionalGroupName]                ,case when Row_Number() over (order by  P.Name) %3 =0 then 'Veg'         when Row_Number() over (order by  P.Name) %4 =0 then 'NonVeg'         else 'Other' End as Category                  ,30 as MakingTime                FROM GM.Tbl_Product P        LEFT OUTER JOIN GM.TBL_PRODUCTGROUP PG ON P.GROUPID=PG.ID        LEFT OUTER JOIN GM.Tbl_ProductAdditionalGroup PAG ON P.AddGroupID = PAG.ID        LEFT OUTER JOIN GM.Tbl_UOM UOM ON P.UOMID =UOM.ID        WHERE P.InActive = 0         AND P.GroupID IN (SELECT [ProductGroupID] FROM  [GM].[Tbl_CounterProductGroupMapping] C WHERE C.CounterID = 262)                 )select distinct MenuId,MenuName from cte ").then(function(a){console.dir(a);b.send(a)})["catch"](function(a){console.log(a);
b.sendStatus(500)})});app.get("/api/v1/getGroup",function(a,b){(new sql.Request(cp)).query("select ID, Name from gm.TBL_PRODUCTGROUP where InActive=0").then(function(a){console.dir(a);b.send(a)})["catch"](function(a){console.log(a);b.sendStatus(500)})});
app.get("/api/v1/getAdditionalGroup",function(a,b){(new sql.Request(cp)).query(" ;with Cte as (    SELECT     0 as MenuID    ,'Default' AS MenuName    ,P.ID    ,P.Name    ,P.Descriptions    ,Convert(decimal(19,2),ISNULL(P.SalesPrice,0.0000)) SalesPrice    ,ISNULL(UOM.ID,0) AS UOMID    ,ISNULL(UOM.Code,'') AS UOM        ,ISNULL(PG.id,0) AS [GroupId]    ,ISNULL(PG.Name,'None') AS [GroupName]        ,ISNULL(PAG.id,0) AS [AdditionalGroupId]    ,ISNULL(PAG.Name,'None') AS [AdditionalGroupName]        ,case when Row_Number() over (order by  P.Name) %3 =0 then 'Veg'     when Row_Number() over (order by  P.Name) %4 =0 then 'NonVeg'     else 'Other' End as Category      ,20 as MakingTime            FROM GM.Tbl_Product P    LEFT OUTER JOIN GM.TBL_PRODUCTGROUP PG ON P.GROUPID=PG.ID    LEFT OUTER JOIN GM.Tbl_ProductAdditionalGroup PAG ON P.AddGroupID = PAG.ID    LEFT OUTER JOIN GM.Tbl_UOM UOM ON P.UOMID =UOM.ID    WHERE P.InActive = 0     AND P.GroupID IN (SELECT [ProductGroupID] FROM  [GM].[Tbl_CounterProductGroupMapping] C WHERE C.CounterID = 262)     union all    SELECT     1 as MenuID    ,'Today Special' AS MenuName    ,P.ID    ,P.Name    ,P.Descriptions    ,Convert(decimal(19,2),ISNULL(P.SalesPrice,0.0000)) SalesPrice    ,ISNULL(UOM.ID,0) AS UOMID    ,ISNULL(UOM.Code,'') AS UOM        ,ISNULL(PG.id,0) AS [GroupId]    ,ISNULL(PG.Name,'None') AS [GroupName]        ,ISNULL(PAG.id,0) AS [AdditionalGroupId]    ,ISNULL(PAG.Name,'None') AS [AdditionalGroupName]        ,case when Row_Number() over (order by  P.Name) %3 =0 then 'Veg'     when Row_Number() over (order by  P.Name) %4 =0 then 'NonVeg'     else 'Other' End as Category          ,30 as MakingTime        FROM GM.Tbl_Product P    LEFT OUTER JOIN GM.TBL_PRODUCTGROUP PG ON P.GROUPID=PG.ID    LEFT OUTER JOIN GM.Tbl_ProductAdditionalGroup PAG ON P.AddGroupID = PAG.ID    LEFT OUTER JOIN GM.Tbl_UOM UOM ON P.UOMID =UOM.ID    WHERE P.InActive = 0     AND P.GroupID IN (SELECT [ProductGroupID] FROM  [GM].[Tbl_CounterProductGroupMapping] C WHERE C.CounterID = 262)         ) select distinct [AdditionalGroupId],[AdditionalGroupName] from cte").then(function(a){console.dir(a);b.send(a)})["catch"](function(a){console.log(a);
b.sendStatus(500)})});
app.get("/api/v1/KDSProduct",function(a,b){var c=a.headers.groupid,d=new sql.Request(cp);d.input("grpID",sql.Int,c);d.query("Declare @GroupID int=@grpID               SELECT                SOD.ID AS OrderID              ,SOM.VNo AS OrderNo              ,CONVERT(INT,SOD.Sno) As OrderSno              ,SOM.VDate As OrderDate              ,CLS.NAME AS TableName              ,SOM.VTime AS OrderTime              ,P.Name AS Item              ,Outstanding.Qty               ,UOM = ISNULL((SELECT UOM.Code FROM GM.Tbl_UOM UOM WHERE UOM.ID =SOD.UOMID),'')              ,SOD.Rate              ,SOD.BasicAmt As Amt              ,SOD.Descriptions              ,CASE WHEN SOD.StatusBYDate IS NULL THEN ( CONVERT (TIME,                CAST(ABS(DATEDIFF(second, SOM.VTime, CONVERT(TIME,GETDATE())) / 60 / 60)   AS NVARCHAR(50)) + ':'                + CAST(ABS(DATEDIFF(second, SOM.VTime, CONVERT(TIME,GETDATE())) / 60 % 60) AS NVARCHAR(50)) + ':'                + CAST(ABS(DATEDIFF(second, SOM.VTime, CONVERT(TIME,GETDATE())) % 60) AS NVARCHAR(50))))            ELSE              (CONVERT (TIME,               CAST(ABS(DATEDIFF(second, CONVERT (TIME,SOD.StatusBYDate), SOM.VTime) / 60 / 60)   AS NVARCHAR(50)) + ':'              + CAST(ABS(DATEDIFF(second, CONVERT (TIME,SOD.StatusBYDate), SOM.VTime) / 60 % 60) AS NVARCHAR(50)) + ':'              + CAST(ABS(DATEDIFF(second, CONVERT (TIME,SOD.StatusBYDate), SOM.VTime) % 60) AS NVARCHAR(50))))            END               AS TimeConsume              ,SOM.Remarks                ,ISNULL(FOD.NoPax_Adult,0) + ISNULL(FOD.NoPax_Child,0) AS Pax                ,CONVERT(BIT,CASE WHEN SOD.StatusID=10 THEN 1 ELSE 0 END ) AS IsDelivered                ,ISNULL(SOD.StatusID,4) AS StatusID            FROM [SALES].[Tbl_SOD] SOD              LEFT OUTER JOIN [SALES].[Tbl_SOM] SOM ON SOM.ID= SOD.SOMID              LEFT OUTER JOIN [SALES].[Ufn_SO_Outstanding](0,0) Outstanding ON SOD.ID=Outstanding.ID            LEFT OUTER JOIN [GM].[Tbl_Product] P ON SOD.PID = P.ID            LEFT OUTER JOIN [SALES].[Tbl_FNBOrderAdditional] FOD ON FOD.SOMID= SOD.SOMID              LEFT OUTER JOIN GM.Tbl_ClassMaster CLS ON SOM.CLSID3=CLS.ID            WHERE  SOM.CLSID3  is not null   AND P.GroupID=@GroupID AND                Outstanding.Qty > 0  AND ISNULL(SOD.StatusID,0) <> 3  AND SOM.CancelByID IS NULL             --ORDER BY SOM.VDate DESC,SOM.VTime  DESC          UNION           select              SOD.ID AS OrderID              ,SOM.VNo AS OrderNo              ,CONVERT(INT,SOD.Sno) As OrderSno              ,SOM.VDate As OrderDate              ,CLS.NAME AS TableNo              ,SOM.VTime AS OrderTime              ,P.Name AS Product              ,SOD.Qty               ,UOM = ISNULL((SELECT UOM.Code FROM GM.Tbl_UOM UOM WHERE UOM.ID =SOD.UOMID),'''')              ,SOD.Rate              ,SOD.BasicAmt As Amt              ,SOD.Descriptions              ,CASE WHEN SOD.StatusBYDate IS NULL THEN ( CONVERT (TIME,                CAST(ABS(DATEDIFF(second, SOM.VTime, CONVERT(TIME,GETDATE())) / 60 / 60)   AS NVARCHAR(50)) + ':'                + CAST(ABS(DATEDIFF(second, SOM.VTime, CONVERT(TIME,GETDATE())) / 60 % 60) AS NVARCHAR(50)) + ':'                + CAST(ABS(DATEDIFF(second, SOM.VTime, CONVERT(TIME,GETDATE())) % 60) AS NVARCHAR(50))))              ELSE                (CONVERT (TIME,                  CAST(ABS(DATEDIFF(second, CONVERT (TIME,SOD.StatusBYDate), SOM.VTime) / 60 / 60)   AS NVARCHAR(50)) + ':'                + CAST(ABS(DATEDIFF(second, CONVERT (TIME,SOD.StatusBYDate), SOM.VTime) / 60 % 60) AS NVARCHAR(50)) + ':'                + CAST(ABS(DATEDIFF(second, CONVERT (TIME,SOD.StatusBYDate), SOM.VTime) % 60) AS NVARCHAR(50))))              END                 AS TimeConsume              ,SOM.Remarks                ,ISNULL(FOD.NoPax_Adult,0) + ISNULL(FOD.NoPax_Child,0) AS Pax                ,CONVERT(BIT,CASE WHEN SOD.StatusID=10 THEN 1 ELSE 0 END ) AS IsServed                ,ISNULL(SOD.StatusID,4) AS StatusID            FROM [SALES].[Tbl_SOD] SOD              LEFT OUTER JOIN [SALES].[Tbl_SOM] SOM ON SOM.ID= SOD.SOMID            LEFT OUTER JOIN [SALES].[Tbl_FNBOrderAdditional] FOD ON FOD.SOMID= SOD.SOMID           LEFT OUTER JOIN [GM].[Tbl_Product] P ON SOD.PID = P.ID           LEFT OUTER JOIN GM.Tbl_ClassMaster CLS ON SOM.CLSID3=CLS.ID           WHERE  SOM.CLSID3  is not null   AND P.GroupID=@GroupID AND              ISNULL(SOD.StatusID,0) Not IN(3, 10 )  AND SOM.CancelByID IS NULL             ORDER BY SOM.VDate DESC,SOM.VTime  DESC").then(function(a){console.dir(a);b.send(a)})["catch"](function(a){console.log(a);
b.sendStatus(500)})});
app.get("/api/v1/getCategory",function(a,b){(new sql.Request(cp)).query(" ;with Cte as (    SELECT     0 as MenuID    ,'Default' AS MenuName    ,P.ID    ,P.Name    ,P.Descriptions    ,Convert(decimal(19,2),ISNULL(P.SalesPrice,0.0000)) SalesPrice    ,ISNULL(UOM.ID,0) AS UOMID    ,ISNULL(UOM.Code,'') AS UOM        ,ISNULL(PG.id,0) AS [GroupId]    ,ISNULL(PG.Name,'None') AS [GroupName]        ,ISNULL(PAG.id,0) AS [AdditionalGroupId]    ,ISNULL(PAG.Name,'None') AS [AdditionalGroupName]        ,case when Row_Number() over (order by  P.Name) %3 =0 then 'Veg'     when Row_Number() over (order by  P.Name) %4 =0 then 'NonVeg'     else 'Other' End as Category      ,20 as MakingTime            FROM GM.Tbl_Product P    LEFT OUTER JOIN GM.TBL_PRODUCTGROUP PG ON P.GROUPID=PG.ID    LEFT OUTER JOIN GM.Tbl_ProductAdditionalGroup PAG ON P.AddGroupID = PAG.ID    LEFT OUTER JOIN GM.Tbl_UOM UOM ON P.UOMID =UOM.ID    WHERE P.InActive = 0     AND P.GroupID IN (SELECT [ProductGroupID] FROM  [GM].[Tbl_CounterProductGroupMapping] C WHERE C.CounterID = 262)     union all    SELECT     1 as MenuID    ,'Today Special' AS MenuName    ,P.ID    ,P.Name    ,P.Descriptions    ,Convert(decimal(19,2),ISNULL(P.SalesPrice,0.0000)) SalesPrice    ,ISNULL(UOM.ID,0) AS UOMID    ,ISNULL(UOM.Code,'') AS UOM        ,ISNULL(PG.id,0) AS [GroupId]    ,ISNULL(PG.Name,'None') AS [GroupName]        ,ISNULL(PAG.id,0) AS [AdditionalGroupId]    ,ISNULL(PAG.Name,'None') AS [AdditionalGroupName]        ,case when Row_Number() over (order by  P.Name) %3 =0 then 'Veg'     when Row_Number() over (order by  P.Name) %4 =0 then 'NonVeg'     else 'Other' End as Category          ,30 as MakingTime        FROM GM.Tbl_Product P    LEFT OUTER JOIN GM.TBL_PRODUCTGROUP PG ON P.GROUPID=PG.ID    LEFT OUTER JOIN GM.Tbl_ProductAdditionalGroup PAG ON P.AddGroupID = PAG.ID    LEFT OUTER JOIN GM.Tbl_UOM UOM ON P.UOMID =UOM.ID    WHERE P.InActive = 0     AND P.GroupID IN (SELECT [ProductGroupID] FROM  [GM].[Tbl_CounterProductGroupMapping] C WHERE C.CounterID = 262)         ) select distinct Category from cte").then(function(a){console.dir(a);b.send(a)})["catch"](function(a){console.log(a);
b.sendStatus(500)})});
app.post("/api/v1/takeorder",function(a,b){var c=a.body.TableID,d=a.body.WaiterID,e=a.body.CounterID,k=a.body.OutletID,h=a.body.AddClass1ID,m=a.body.AddClass2ID,l=a.body.AddClass3ID,q=a.body.AddClass4ID,u=a.body.AddClass5ID,r=a.body.FYID,n=a.body.UnitID,x=a.body.DID,p=a.body.NumId,w=a.body.UserId,v=a.body.PCInfo,t=a.body.DetailsXml,g=new sql.Request(cp);g.input("OutletID",sql.Int,k);g.input("TableID",sql.Int,c);g.input("WaiterID",sql.Int,d);g.input("CounterID",sql.Int,e);g.input("AddClass1ID",sql.Int,
h);g.input("AddClass2ID",sql.Int,m);g.input("AddClass3ID",sql.Int,l);g.input("AddClass4ID",sql.Int,q);g.input("AddClass5ID",sql.Int,u);g.input("FYID",sql.Int,r);g.input("UnitID",sql.Int,n);g.input("DID",sql.Int,x);g.input("NumId",sql.TINYINT,p);g.input("UserId",sql.TINYINT,w);g.input("PCInfo",sql.VarChar(50),v);g.input("DetailsXml",sql.VarChar(200),t);g.output("OutId",sql.Int);g.output("OutMessage",sql.Nvarchar);g.execute("[SALES].[Usp_FNBO_Tab_UI]").then(function(a){console.dir(a);b.sendStatus(200)})["catch"](function(a){b.sendStatus(500);
console.log(a)})});app.use("/static",express["static"](__dirname+"/static"));app.post("/api/v1/changepassword",function(a,b){var c=a.body.id,d=a.body.password,e=new sql.Request(cp);e.input("password",sql.NChar,d);e.input("id",sql.Int,c);e.query("UPDATE GM.Tbl_ClassMaster SET [Password] = CONVERT(VARBINARY,ISNULL(NULLIF(@password,''),'000') )    WHERE Id = @id").then(function(a){console.log("password changed by id "+c);b.sendStatus(200)})["catch"](function(a){console.log(a);status="error";b.sendStatus(500)})});
app.post("/api/v1/changePasscode",function(a,b){console.log(a.body);var c=a.body.waiterID,d=a.body.passcode,e=new sql.Request(cp);e.input("Passcode",sql.NChar,d);e.input("WaiterID",sql.Int,c);e.query("IF NOT EXISTS (select ID from gm.tbl_classmaster where Passcode = convert(varbinary(max),@Passcode))    BEGIN      Update gm.tbl_classmaster set PassCode=convert(varbinary(max),@Passcode) where ID=@WaiterID      select 1 ID    END    ELSE    BEGIN      select 0 ID    END").then(function(a){b.status(200).json(a[0]);
console.log(a[0])})["catch"](function(a){console.log(a);b.status(500).json({message:a.message})})});
app.post("/api/v1/changePasscodeCashier",function(a,b){console.log(a.body);var c=a.body.waiterID,d=a.body.passcode,e=new sql.Request(cp);e.input("Passcode",sql.NChar,d);e.input("WaiterID",sql.Int,c);e.query("IF NOT EXISTS (select ID from gm.Tbl_UserMaster where Passcode = convert(varbinary(max),@Passcode))    BEGIN      Update gm.Tbl_UserMaster set PassCode=convert(varbinary(max),@Passcode) where ID=@WaiterID      select 1 ID    END    ELSE    BEGIN      select 0 ID    END").then(function(a){b.status(200).json(a[0]);console.log(a[0])})["catch"](function(a){console.log(a);
b.status(500).json({message:a.message})})});
app.post("/api/v1/tableTransfer",function(a,b){var c=a.body.sourceid,d=a.body.destinationid,e=a.body.waiterID,k=a.body.printerName||"",h=new sql.Request(cp);h.input("sourceTableId",sql.Int,c);h.input("destinationTableId",sql.Int,d);h.input("userID",sql.Int,config.common.UserID);h.input("waiterID",sql.Int,e);h.query("SET XACT_ABORT ON     BEGIN TRANSACTION    DECLARE @ID TABLE (ID INT )          Declare @TableSegment int     SELECT @TableSegment = ClassTypeID FROM GM.Tbl_ClassMaster WHERE ID = @sourceTableId             INSERT INTO @ID    SELECT DISTINCT    SOM. ID    FROM [SALES].[Tbl_SOD] SOD      LEFT OUTER JOIN [SALES].[Tbl_SOM] SOM ON SOM.ID= SOD.SOMID             LEFT OUTER JOIN [SALES].[Ufn_SO_Outstanding](0,0) Outstanding ON SOD.ID=Outstanding.ID    WHERE  CASE @TableSegment     WHEN 1 THEN SOM.CLSID1     WHEN 2 THEN SOM.CLSID2     WHEN 3 THEN SOM.CLSID3     WHEN 4 THEN SOM.CLSID4     WHEN 5 THEN SOM.CLSID5     WHEN 6 THEN SOM.CLSID6    WHEN 7 THEN SOM.CLSID7    WHEN 8 THEN SOM.CLSID8    WHEN 9 THEN SOM.CLSID9    END = @sourceTableId AND Outstanding.Qty > 0                    UPDATE [SALES].[Tbl_SOM] SET CLSID3 = @destinationTableId    WHERE ID IN (    SELECT DISTINCT    SOM. ID    FROM [SALES].[Tbl_SOD] SOD      LEFT OUTER JOIN [SALES].[Tbl_SOM] SOM ON SOM.ID= SOD.SOMID             LEFT OUTER JOIN [SALES].[Ufn_SO_Outstanding](0,0) Outstanding ON SOD.ID=Outstanding.ID    WHERE  CASE @TableSegment     WHEN 1 THEN SOM.CLSID1     WHEN 2 THEN SOM.CLSID2     WHEN 3 THEN SOM.CLSID3     WHEN 4 THEN SOM.CLSID4     WHEN 5 THEN SOM.CLSID5     WHEN 6 THEN SOM.CLSID6    WHEN 7 THEN SOM.CLSID7    WHEN 8 THEN SOM.CLSID8    WHEN 9 THEN SOM.CLSID9    END = @sourceTableId AND Outstanding.Qty > 0)        DECLARE @Code NVARCHAR(64)     EXEC Usys.Usp_GetCode 'SALES.Tbl_FNBOrderTransfer', 'OTCode','','TF',@Code OUTPUT      INSERT INTO [SALES].[Tbl_FNBOrderTransfer]    (    SOMID,SODID,OldSOMID,OldSODID,NewTableID ,OldTableID,UserID ,WaiterID ,Messagess,OTCode ,StatusID,ActionDateTime,PrintNo    )    SELECT     D.SOMID,D.ID,   D.SOMID,D.ID,@destinationTableId,@sourceTableId,@UserId,@waiterID,NULL, @Code,13,GETDATE(),NULL    FROM [SALES].[Tbl_SOD] D WHERE D.SOMID IN(SELECT ID FROM @ID)  ORDER BY  D.SOMID,SNO              SELECT TOP 1 ID FROM [SALES].[Tbl_FNBOrderTransfer] WHERE OTCode =@Code  AND ISNULL(StatusID,0)=13 ORDER BY ID            COMMIT    SET XACT_ABORT OFF").then(function(a){console.log(a);console.log("table transferred to"+
d);print({UserID:config.common.UserID,UnitID:config.common.UnitID,type:302,VoucherNumber:a[0].ID,ServerName:config.Server,ServerUserName:config.db.userName,ServerPassword:config.db.password,DataBaseName:config.db.database,PrinterName:k,NoOfCopy:1},function(a,b){a?console.log(a):(console.log("printer:"+k),console.log(b))});b.sendStatus(200)})["catch"](function(a){console.log(a);status="error";b.sendStatus(500)})});
app.post("/api/v1/orderTransfer",function(a,b){var c=a.body.voucherNo,d=a.body.newTableID,e=a.body.waiterID,k=a.body.remarks,h=a.body.printerName||"",m=new sql.Request(cp);m.input("VoucherNo",sql.Char,c);m.input("NewTableID",sql.Int,d);m.input("WaiterID",sql.Int,e);m.input("UserID",sql.Int,config.common.UserID);m.input("Remarks",sql.Char,k);m.query("SET XACT_ABORT ON     BEGIN TRANSACTION    DECLARE @ID int  ,@OldTableID int     SELECT @ID = ID,@OldTableID=[CLSID3] FROM SALES.Tbl_SOM WHERE VNO=@VoucherNo         UPDATE [SALES].[Tbl_SOM] SET [CLSID3]=@NewTableID WHERE VNO=@voucherNo    UPDATE [Audit].[Tbl_SOM_Audit] SET [CLSID3]=@NewTableID WHERE VNO=@voucherNo        DECLARE @Code NVARCHAR(64)     EXEC Usys.Usp_GetCode 'SALES.Tbl_FNBOrderTransfer', 'OTCode','','TF',@Code OUTPUT          INSERT INTO [SALES].[Tbl_FNBOrderTransfer]    (    SOMID,SODID,OldSOMID,OldSODID,NewTableID ,OldTableID,UserID ,WaiterID ,Messagess,OTCode ,StatusID,ActionDateTime,PrintNo    )    SELECT     @ID,D.ID,  @ID,D.ID,@NewTableID,@OldTableID,@UserId,@WaiterID,@REMARKS,@Code,12,GETDATE(),NULL    FROM [SALES].[Tbl_SOD] D WHERE D.SOMID=@ID  ORDER BY SNO                        SELECT TOP 1 ID FROM [SALES].[Tbl_FNBOrderTransfer] WHERE SOMID=@ID AND ISNULL(StatusID,0)=12  ORDER BY ID            COMMIT    SET XACT_ABORT OFF ").then(function(a){console.log("order transferred to "+
d);console.log(a);print({UserID:config.common.UserID,UnitID:config.common.UnitID,type:302,VoucherNumber:a[0].ID,ServerName:config.Server,ServerUserName:config.db.userName,ServerPassword:config.db.password,DataBaseName:config.db.database,PrinterName:h,NoOfCopy:1},function(a,b){a?console.log(a):(console.log("printer:"+h),console.log(b))});b.sendStatus(200)})["catch"](function(a){console.log(a);status="error";b.sendStatus(500)})});app.get("/api/v1/narration",function(a,b){(new sql.Request(cp)).query("SELECT Narration, NM.TypeId FROM GM.Tbl_NarrationMaster NM WHERE NM .InActive = 0 ").then(function(a){b.send(a)})});
app.get("/api/v1/guestno",function(a,b){var c=a.headers.tableid,d=new sql.Request(cp);d.input("TableID",sql.Char,c);d.query("WITH CTE  AS (    SELECT       Outstanding.Qty     ,SOM.CLSID3     AS TableID    ,FOD.*     FROM [SALES].[Tbl_SOD] SOD     LEFT OUTER JOIN [SALES].[Tbl_SOM] SOM ON SOM.ID= SOD.SOMID     LEFT OUTER JOIN [SALES].[Tbl_FNBOrderAdditional] FOD ON FOD.SOMID= SOD.SOMID     LEFT OUTER JOIN [SALES].[Ufn_SO_Outstanding](0,0) Outstanding ON SOD.ID=Outstanding.ID            ) select TOP 1 NoPax_Adult ,NoPax_Child,BillingGLID from CTE WHERE TableID=@TableID AND Qty > 0 and somid is not null Order by somid desc").then(function(a){b.send(a)})});
app.post("/api/v1/itemtransfer",function(a,b){var c=a.body.voucherNo,d=a.body.sn,e=a.body.remarks,k=a.body.newTableName,h=a.body.newTableID,m=a.body.waiterID,l=a.body.printerName||"";request1=new Request("[SALES].[USP_FNBO_TRANSFER_TAB_UI]",function(a,c){a?(console.log(a),b.sendStatus(500)):(console.log(c+" rows"),console.log("item transferred to "+k),b.sendStatus(200))});var q=require("tedious").TYPES;request1.addParameter("VoucherNo",q.Char,c);request1.addParameter("Sno",q.Int,d);request1.addParameter("REMARKS",
q.Char,e);request1.addParameter("NewTableName",q.Char,k);request1.addParameter("NewTableID",q.Int,h);request1.addParameter("UserId",q.Int,config.common.UserID);request1.addParameter("WaiterID",q.Int,m);request1.on("row",function(a){a.forEach(function(a){console.log("column value"+a.value);!a.value||print({UserID:config.common.UserID,UnitID:config.common.UnitID,type:302,VoucherNumber:Number(a.value),ServerName:config.Server,ServerUserName:config.db.userName,ServerPassword:config.db.password,DataBaseName:config.db.database,
PrinterName:l,NoOfCopy:1},function(a,b){a?console.log(a):(console.log("printer:"+l),console.log(b))})})});connection.callProcedure(request1)});
app.post("/api/v1/orderCancellation",function(a,b){console.log(a.body);var c=a.body.reason,d=a.body.orderno,e=a.body.waiterID,k=a.body.printerName;k&&(k="");var h=Number(a.body.statusID||3),m=a.body.sn,l=new sql.Request(cp);l.input("reason",sql.Char,c);l.input("sno",sql.Int,m);l.input("orderNo",sql.Char,d);l.input("waiterID",sql.Int,e);l.input("statusID",sql.Int,h);l.query("UPDATE SALES.Tbl_SOD SET StatusID = @statusID,StatusRemarks=@reason,StatusByDate=getdate(),StatusByWaiterID=@waiterID     WHERE SOMID=(SELECT ID FROM SALES.Tbl_SOM WHERE VNO=@orderNo  AND Sno=@sno)    SELECT ID FROM SALES.TBL_SOD WHERE SOMID=(SELECT ID FROM SALES.Tbl_SOM WHERE VNO=@orderNo) AND Sno=@sno").then(function(a){console.log("Order Cancelled "+
d);print({UserID:config.common.UserID,UnitID:config.common.UnitID,type:284,VoucherNumber:a[0].ID,ServerName:config.Server,ServerUserName:config.db.userName,ServerPassword:config.db.password,DataBaseName:config.db.database,PrinterName:k,NoOfCopy:1},function(a,b){a?console.log(a):(console.log("printer:"+k),console.log(b))});console.log(a);b.sendStatus(200)})["catch"](function(a){console.log(a);status="error";b.sendStatus(500)})});
app.get("/api/v1/billDetails",function(a,b){var c=a.headers.tableid,d=new sql.Request(cp);d.input("tableID",sql.Char,c);d.query(";WITH CTE  AS (    SELECT       SOM.ID AS SOMID    ,SOD.ID AS SODID    ,SOM.VNo AS OrderNo    ,SOD.Sno As OrderSno    ,SOM.RefVno AS OrderRefNo    ,SOM.VDate As OrderDate    ,OrderMiti = (SELECT M_Miti FROM Usys.Tbl_DateMiti DM WHERE DM.M_Date = SOM.VDate)    ,SOM.VTime AS OrderTime    ,P.GroupID                                        ,P.ID AS PID    ,P.Name AS Product    ,Outstanding.Qty     ,ISNULL(SOD.UOMID,0) UOMID    ,UOM = ISNULL((SELECT UOM.Code FROM GM.Tbl_UOM UOM WHERE UOM.ID =SOD.UOMID),'')    ,SOD.Rate Rate    ,SOD.Rate  * Outstanding.Qty  As Amt    ,SOD.Descriptions    , SOM.CLSID3     AS TableID    FROM [SALES].[Tbl_SOD] SOD      LEFT OUTER JOIN [SALES].[Tbl_SOM] SOM ON SOM.ID= SOD.SOMID             LEFT OUTER JOIN [SALES].[Ufn_SO_Outstanding](0,0) Outstanding ON SOD.ID=Outstanding.ID    LEFT OUTER JOIN [GM].[Tbl_Product] P ON SOD.PID = P.ID    WHERE  ISNULL(SOD.StatusID,0) <> 3  AND SOM.CancelByID IS NULL     )    SELECT * FROM CTE WHERE TableID=@TableID AND Qty > 0    ORDER BY SOMID,OrderSno ").then(function(a){console.log("Bill Details ");
b.send(a)})["catch"](function(a){console.log(a);status="error";b.sendStatus(500)})});app.get("/api/v1/customer",function(a,b){(new sql.Request(cp)).query("SELECT  [M].[ID], [M].[Name] FROM [GM].[Tbl_Ledger] AS M WHERE TypeID IN (15,16,18,20) AND InActive = 0").then(function(a){b.send(a)})["catch"](function(a){console.log(a);status="error";b.sendStatus(500)})});
app.get("/api/v1/party",function(a,b){(new sql.Request(cp)).query("SELECT  G.ID,Name,ISNULL(CPerson,'') AS CPerson,ISNULL(AddressValue,'') AS AddressValue,ISNULL(PhoneValue,'') AS PhoneValue    ,ISNULL(EmailValue,'') AS EmailValue,ISNULL(URLValue,'') AS URLValue    ,ISNULL(C.VatPanNo,'') AS VatPanNo    FROM GM.Tbl_ledger G    LEFT OUTER JOIN GM.TBL_CVAddInfo C ON G.ID=C.GLID     WHERE TypeID IN (18,20) AND InActive = 0").then(function(a){b.send(a)})["catch"](function(a){console.log(a);status="error";
b.sendStatus(500)})});app.get("/api/v1/privilege",function(a,b){(new sql.Request(cp)).query("Select Id AS ID,Name  as CardNo , DiscountRate From GM.tbl_PrevilageCard").then(function(a){b.send(a)})["catch"](function(a){console.log(a);status="error";b.sendStatus(500)})});
app.get("/api/v1/billPrintDetails",function(a,b){(new sql.Request(cp)).query("select TOP 50 sm.ID,VNo,gm.Name as TableName,  cm.Name as WaiterName,NetAmt,VDate,M_Miti as Miti from sales.tbl_sbm as sm  left outer join USys.Tbl_DateMiti dm on sm.VDate=dm.m_Date  left outer join gm.tbl_classmaster cm on sm.clsid4=cm.ID  left outer join gm.tbl_classmaster gm on sm.clsid3=gm.ID  order by id DESC").then(function(a){b.send(a)})["catch"](function(a){console.log(a);b.sendStatus(500)})});
app.get("/api/v1/orderPrintDetails",function(a,b){(new sql.Request(cp)).query("select TOP 50 sm.ID,VNo,gm.Name as TableName,  cm.Name as WaiterName,NetAmt,VDate,M_Miti as Miti from sales.tbl_som as sm  left outer join USys.Tbl_DateMiti dm on sm.VDate=dm.m_Date  left outer join gm.tbl_classmaster cm on sm.clsid4=cm.ID  left outer join gm.tbl_classmaster gm on sm.clsid3=gm.ID  order by id DESC").then(function(a){b.send(a)})["catch"](function(a){console.log(a);b.sendStatus(500)})});
app.get("/api/v1/currentPAX",function(a,b){(new sql.Request(cp)).query("; with cte as (SELECT SOM.CLSID3 , MAX(A.NoPax_Adult) AS PaxAdult ,MAX(A.NoPax_Child) AS PaxChild FROM [SALES].[Tbl_SOD] SOD    LEFT OUTER JOIN [SALES].[Tbl_SOM] SOM ON SOM.ID= SOD.SOMID    LEFT OUTER JOIN SALES.Tbl_FNBOrderAdditional A ON SOM.ID=A.SOMID    LEFT OUTER JOIN [SALES].[Ufn_SO_Outstanding](0,0) Outstanding ON SOD.ID=Outstanding.ID    LEFT OUTER JOIN [GM].[Tbl_Product] P ON SOD.PID = P.ID WHERE Outstanding.Qty > 0    group by SOM.CLSID3 )    select sum(isnull(PaxAdult,0) + isnull(PaxChild,0)) as NUMBEROFPAX from cte").then(function(a){b.send(a)})["catch"](function(a){console.log(a);
status="error";b.sendStatus(500)})});app.get("/api/v1/totalPAX",function(a,b){(new sql.Request(cp)).query("SELECT SUM(ISNULL(F.NoPax_Adult,0) + ISNULL(F.NoPax_Child,0)) AS NUMBEROFPAX FROM SALES.Tbl_FNBBillAdditional F    LEFT OUTER JOIN SALES.Tbl_SBM M ON M.ID=F.SBMID WHERE M.VDATE=CONVERT(DATE,GETDATE()) AND (M.CancelByID IS NULL )").then(function(a){b.send(a)})["catch"](function(a){console.log(a);status="error";b.sendStatus(500)})});
app.get("/api/v1/customerDetails",function(a,b){(new sql.Request(cp)).query("SELECT  [M].[ID], [M].[Name], [M].[Code], d.CValue as [Type]      FROM [GM].[Tbl_Ledger] AS M      left outer join usys.Tbl_ENUM_COLL as d on m.TypeID=d.ID      WHERE m.TypeID IN (15,16,18,20) AND m.InActive = 0").then(function(a){b.send(a)})["catch"](function(a){console.log(a);status="error";b.sendStatus(500)})});
app.get("/api/v1/productImage",function(a,b){(new sql.Request(cp)).query("select ID,Logo from gm.tbl_product where Logo IS NOT NULL;").then(function(a){b.status(200).json(a)})["catch"](function(a){console.log(a);status="error";b.status(500).send(a.message)})});
app.put("/api/v1/tabledesign",function(a,b){var c=a.body.description,d=a.body.design,e=a.body.code,k=a.body.groupID,h=new sql.Request(cp);h.input("design",sql.Xml,d);h.input("description",sql.NChar,c);h.input("code",sql.NChar,e);h.input("groupID",sql.Int,k);h.query("if exists(select * from gm.tbl_tablelayout where GroupID=@groupID)    update [GM].[tbl_tablelayout] set code=@code,Description=@description,design=@design,groupID=@groupID where groupID=@groupID    else      insert into [GM].[tbl_tablelayout] values(@code,@description,@design,0,@groupID)").then(function(a){console.log("design set");
b.sendStatus(200)})["catch"](function(a){console.log(a);status="error";b.status(500).send(a.message)})});app.get("/api/v1/waiter",function(a,b){var c=new sql.Request(cp);query="Select ID,Name from gm.tbl_classmaster where classtypeid=4";c.query(query).then(function(a){b.json(a)})});app.get("/api/v1/decimalformat",function(a,b){(new sql.Request(cp)).query("select DFQty,DFRate,DFAmount from gm.tbl_systemcontrol").then(function(a){b.send(a)})["catch"](function(a){b.status(500).send(a.msg)})});
app.get("/api/v1/BillCardInformation",function(a,b){console.log(a.headers);(new sql.Request(cp)).query("SELECT BillCard = (SELECT Name FROM GM.Tbl_PrevilageCard PC         WHERE PC.ID=AD.BillCardID),SBT.SBMID as ID ,SBT.TRate CardDiscountRate ,        ABS(SBT.TAmt) CardDiscountAmount FROM SALES.Tbl_FNBBillAdditional AD LEFT OUTER JOIN SALES.Tbl_SBT SBT ON         SBT.SBMID = AD.SBMID WHERE BTID = (SELECT TOP 1 ID FROM GM.Tbl_BillingTerm WHERE NAME LIKE 'DISCOUNT%') AND TYPEID = 117").then(function(a){b.send(a)})["catch"](function(a){status=
"error";b.sendStatus(500)})});
app.get("/api/v1/BillReceiptNoOfPax",function(a,b){var c=a.headers.tableid,d=new sql.Request(cp);d.input("tableID",sql.Char,c);d.query("select * from SALES.Tbl_FNBOrderAdditional where SOMID = (SELECT top 1 SOMID        FROM  [SALES].[Ufn_SO_Outstanding](0,0) Outstanding        LEFT OUTER JOIN SALES.Tbl_SOM SOM ON Outstanding.SOMID = SOM.ID        WHERE   SOM.CLSID3 =@tableID        order by SOMID desc)").then(function(a){b.send(a)})["catch"](function(a){status="error";b.sendStatus(500)})});
app.use(function(a,b,c){a=Error("Not Found");a.status=404;c(a)});process.on("uncaughtException",function(a){console.log(a.stack)});module.exports=app;